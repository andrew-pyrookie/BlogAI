/*! jQuery Migrate v3.4.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
(function (global) {
    "use strict";

    // Check if jQuery is undefined
    if (typeof jQuery.migrateMute === "undefined") {
        jQuery.migrateMute = true;
    }

    function versionCompare(version1, version2) {
        const regex = /^(\d+)\.(\d+)\.(\d+)/;
        const v1 = regex.exec(version1) || [];
        const v2 = regex.exec(version2) || [];

        for (let i = 1; i <= 3; i++) {
            if (+v2[i] < +v1[i]) return 1;
            if (+v1[i] < +v2[i]) return -1;
        }
        return 0;
    }

    // Set the migrate version
    jQuery.migrateVersion = "3.4.1";

    // Define patch management object
    const patches = Object.create(null);

    jQuery.migrateDisablePatches = function() {
        for (let i = 0; i < arguments.length; i++) {
            patches[arguments[i]] = true;
        }
    };

    jQuery.migrateEnablePatches = function() {
        for (let i = 0; i < arguments.length; i++) {
            delete patches[arguments[i]];
        }
    };

    jQuery.migrateIsPatchEnabled = function(patch) {
        return !patches[patch];
    };

    // Console warnings and logging
    if (console && console.log) {
        if (versionCompare(jQuery.fn.jquery, "3.0.0") >= 0 && versionCompare(jQuery.fn.jquery, "5.0.0") < 0) {
            console.log("JQMIGRATE: jQuery 3.x-4.x REQUIRED");
        }
        if (jQuery.migrateWarnings && console.log) {
            console.log("JQMIGRATE: Migrate plugin loaded multiple times");
        }
        console.log("JQMIGRATE: Migrate is installed" + (jQuery.migrateMute ? "" : " with logging active") + ", version " + jQuery.migrateVersion);
    }

    // Function to handle deprecations and warnings
    function issueWarning(patch, message) {
        if (!jQuery.migrateIsPatchEnabled(patch) || jQuery.migrateDeduplicateWarnings && patches[message]) {
            return;
        }
        patches[message] = true;
        if (console && console.warn) {
            console.warn("JQMIGRATE: " + message);
        }
    }

    // Fix for deprecated methods and selectors
    jQuery.fn.init = function() {
        const args = Array.prototype.slice.call(arguments);
        if (jQuery.migrateIsPatchEnabled("selector-empty-id") && typeof args[0] === "string" && args[0] === "#") {
            issueWarning("selector-empty-id", "jQuery( '#' ) is not a valid selector");
            args[0] = [];
        }
        return originalInit.apply(this, args);
    };

    // Additional migrations and method deprecations are handled similarly...

})(window);
